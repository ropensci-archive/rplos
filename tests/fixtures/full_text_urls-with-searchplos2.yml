http_interactions:
- request:
    method: get
    uri: http://journals.plos.org/plosone/article/file?id=10.1371/journal.pone.0086169&type=manuscript
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.64.1 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: 'HTTP/1.1 200 '
      date: Tue, 07 Apr 2020 21:31:23 GMT
      server: Apache/2.4.29 (Ubuntu)
      set-cookie: plos-device-detected=desktop; path=/; domain=.journals.plos.org;
        expires=Tue, 07-Apr-2020 23:31:23 GMT
      last-modified: Wed, 26 Mar 2014 13:24:29 GMT
      content-disposition: inline; filename=journal.pone.0086169.XML
      x-content-type-options: nosniff
      x-xss-protection: 1; mode=block
      cache-control: no-cache, no-store, max-age=0, must-revalidate
      pragma: no-cache
      expires: '0'
      x-frame-options: DENY
      content-type: text/xml
      content-encoding: gzip
      vary: Accept-Encoding
      transfer-encoding: chunked
    body:
      encoding: ASCII-8BIT
      file: no
      string: 
  recorded_at: 2020-04-07 21:31:25 GMT
  recorded_with: vcr/0.5.4, webmockr/0.6.2
- request:
    method: get
    uri: http://journals.plos.org/plosone/article/file?id=10.1371/journal.pone.0086169&type=manuscript
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.64.1 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: 'HTTP/1.1 200 '
      date: Tue, 07 Apr 2020 21:31:23 GMT
      server: Apache/2.4.29 (Ubuntu)
      set-cookie: plos-device-detected=desktop; path=/; domain=.journals.plos.org;
        expires=Tue, 07-Apr-2020 23:31:24 GMT
      last-modified: Wed, 26 Mar 2014 13:24:29 GMT
      content-disposition: inline; filename=journal.pone.0086169.XML
      x-content-type-options: nosniff
      x-xss-protection: 1; mode=block
      cache-control: no-cache, no-store, max-age=0, must-revalidate
      pragma: no-cache
      expires: '0'
      x-frame-options: DENY
      content-type: text/xml
      content-encoding: gzip
      vary: Accept-Encoding
      transfer-encoding: chunked
    body:
      encoding: ASCII-8BIT
      file: no
      string: 
  recorded_at: 2020-04-07 21:31:25 GMT
  recorded_with: vcr/0.5.4, webmockr/0.6.2
- request:
    method: get
    uri: http://journals.plos.org/plosbiology/article/file?id=10.1371/journal.pbio.1001845&type=manuscript
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.64.1 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: 'HTTP/1.1 200 '
      date: Tue, 07 Apr 2020 21:31:23 GMT
      server: Apache/2.4.29 (Ubuntu)
      set-cookie: plos-device-detected=desktop; path=/; domain=.journals.plos.org;
        expires=Tue, 07-Apr-2020 23:31:24 GMT
      last-modified: Wed, 30 Apr 2014 03:08:25 GMT
      content-disposition: inline; filename=journal.pbio.1001845.XML
      x-content-type-options: nosniff
      x-xss-protection: 1; mode=block
      cache-control: no-cache, no-store, max-age=0, must-revalidate
      pragma: no-cache
      expires: '0'
      x-frame-options: DENY
      content-type: text/xml
      content-encoding: gzip
      vary: Accept-Encoding
      transfer-encoding: chunked
    body:
      encoding: ASCII-8BIT
      file: no
      string: 
  recorded_at: 2020-04-07 21:31:25 GMT
  recorded_with: vcr/0.5.4, webmockr/0.6.2
- request:
    method: get
    uri: http://api.plos.org/search?q=%2A%3A%2A&fl=id&rows=0&wt=json
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.64.1 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      server: nginx/1.14.1
      date: Tue, 07 Apr 2020 21:31:24 GMT
      content-type: application/json;charset=utf-8
      content-length: '60'
      connection: keep-alive
      last-modified: Tue, 07 Apr 2020 17:37:13 GMT
      etag: '"Y2I3ZDgwMDAwMDAwMDAwMFNvbHI="'
    body:
      encoding: ASCII-8BIT
      file: no
      string: ewogICJyZXNwb25zZSI6eyJudW1Gb3VuZCI6MjM0MTk2Nywic3RhcnQiOjAsImRvY3MiOltdCiAgfX0K
  recorded_at: 2020-04-07 21:31:25 GMT
  recorded_with: vcr/0.5.4, webmockr/0.6.2
- request:
    method: get
    uri: http://api.plos.org/search?fq=article_type%3A%22Research%20Article%22&q=%2A%3A%2A&fl=id&start=0&rows=3&wt=json&fq=doc_type%3Afull
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.64.1 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      server: nginx/1.14.1
      date: Tue, 07 Apr 2020 21:31:24 GMT
      content-type: application/json;charset=utf-8
      content-length: '220'
      connection: keep-alive
      last-modified: Tue, 07 Apr 2020 17:37:13 GMT
      etag: '"OTk3ZDgwMDAwMDAwMDAwMFNvbHI="'
    body:
      encoding: ASCII-8BIT
      file: no
      string: ewogICJyZXNwb25zZSI6eyJudW1Gb3VuZCI6MjUzNDc0LCJzdGFydCI6MCwiZG9jcyI6WwogICAgICB7CiAgICAgICAgImlkIjoiMTAuMTM3MS9qb3VybmFsLnBvbmUuMDAyMDg0MyJ9LAogICAgICB7CiAgICAgICAgImlkIjoiMTAuMTM3MS9qb3VybmFsLnBvbmUuMDAyMjI1NyJ9LAogICAgICB7CiAgICAgICAgImlkIjoiMTAuMTM3MS9qb3VybmFsLnBvbmUuMDAyMzEzOSJ9XQogIH19Cg==
  recorded_at: 2020-04-07 21:31:25 GMT
  recorded_with: vcr/0.5.4, webmockr/0.6.2
- request:
    method: get
    uri: http://journals.plos.org/plosone/article/file?id=10.1371/journal.pone.0020843&type=manuscript
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.64.1 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: 'HTTP/1.1 200 '
      date: Tue, 07 Apr 2020 21:31:24 GMT
      server: Apache/2.4.29 (Ubuntu)
      set-cookie: plos-device-detected=desktop; path=/; domain=.journals.plos.org;
        expires=Tue, 07-Apr-2020 23:31:24 GMT
      last-modified: Wed, 26 Mar 2014 08:26:33 GMT
      content-disposition: inline; filename=journal.pone.0020843.XML
      x-content-type-options: nosniff
      x-xss-protection: 1; mode=block
      cache-control: no-cache, no-store, max-age=0, must-revalidate
      pragma: no-cache
      expires: '0'
      x-frame-options: DENY
      content-type: text/xml
      content-encoding: gzip
      vary: Accept-Encoding
      transfer-encoding: chunked
    body:
      encoding: ASCII-8BIT
      file: no
      string: 
  recorded_at: 2020-04-07 21:31:25 GMT
  recorded_with: vcr/0.5.4, webmockr/0.6.2
- request:
    method: get
    uri: http://journals.plos.org/plosone/article/file?id=10.1371/journal.pone.0022257&type=manuscript
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.64.1 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: 'HTTP/1.1 200 '
      date: Tue, 07 Apr 2020 21:31:24 GMT
      server: Apache/2.4.29 (Ubuntu)
      set-cookie: plos-device-detected=desktop; path=/; domain=.journals.plos.org;
        expires=Tue, 07-Apr-2020 23:31:24 GMT
      last-modified: Wed, 26 Mar 2014 08:32:08 GMT
      content-disposition: inline; filename=journal.pone.0022257.XML
      x-content-type-options: nosniff
      x-xss-protection: 1; mode=block
      cache-control: no-cache, no-store, max-age=0, must-revalidate
      pragma: no-cache
      expires: '0'
      x-frame-options: DENY
      content-type: text/xml
      content-encoding: gzip
      vary: Accept-Encoding
      transfer-encoding: chunked
    body:
      encoding: ASCII-8BIT
      file: no
      string: 
  recorded_at: 2020-04-07 21:31:25 GMT
  recorded_with: vcr/0.5.4, webmockr/0.6.2
- request:
    method: get
    uri: http://journals.plos.org/plosone/article/file?id=10.1371/journal.pone.0023139&type=manuscript
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.64.1 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: 'HTTP/1.1 200 '
      date: Tue, 07 Apr 2020 21:31:24 GMT
      server: Apache/2.4.29 (Ubuntu)
      set-cookie: plos-device-detected=desktop; path=/; domain=.journals.plos.org;
        expires=Tue, 07-Apr-2020 23:31:25 GMT
      last-modified: Wed, 26 Mar 2014 08:35:26 GMT
      content-disposition: inline; filename=journal.pone.0023139.XML
      x-content-type-options: nosniff
      x-xss-protection: 1; mode=block
      cache-control: no-cache, no-store, max-age=0, must-revalidate
      pragma: no-cache
      expires: '0'
      x-frame-options: DENY
      content-type: text/xml
      content-encoding: gzip
      vary: Accept-Encoding
      transfer-encoding: chunked
    body:
      encoding: ASCII-8BIT
      file: no
      string: 
  recorded_at: 2020-04-07 21:31:25 GMT
  recorded_with: vcr/0.5.4, webmockr/0.6.2

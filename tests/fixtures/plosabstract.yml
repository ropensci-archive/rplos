http_interactions:
- request:
    method: get
    uri: http://api.plos.org/search?q=abstract%3A%22drosophila%22&fl=abstract%2Cid&rows=0&wt=json
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.64.1 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      server: nginx/1.14.1
      date: Tue, 07 Apr 2020 21:31:39 GMT
      content-type: application/json;charset=utf-8
      content-length: '57'
      connection: keep-alive
      last-modified: Tue, 07 Apr 2020 17:37:13 GMT
      etag: '"Y2I3ZDgwMDAwMDAwMDAwMFNvbHI="'
    body:
      encoding: ASCII-8BIT
      file: no
      string: ewogICJyZXNwb25zZSI6eyJudW1Gb3VuZCI6Mzc4OCwic3RhcnQiOjAsImRvY3MiOltdCiAgfX0K
  recorded_at: 2020-04-07 21:31:39 GMT
  recorded_with: vcr/0.5.4, webmockr/0.6.2
- request:
    method: get
    uri: http://api.plos.org/search?q=abstract%3A%22drosophila%22&fl=abstract%2Cid&start=0&rows=10&wt=json
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.64.1 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      server: nginx/1.14.1
      date: Tue, 07 Apr 2020 21:31:39 GMT
      content-type: application/json;charset=utf-8
      content-length: '16119'
      connection: keep-alive
      last-modified: Tue, 07 Apr 2020 17:37:13 GMT
      etag: '"Y2I3ZDgwMDAwMDAwMDAwMFNvbHI="'
    body:
      encoding: ASCII-8BIT
      file: no
      string: 
  recorded_at: 2020-04-07 21:31:39 GMT
  recorded_with: vcr/0.5.4, webmockr/0.6.2
- request:
    method: get
    uri: http://api.plos.org/search?q=abstract%3A%22drosophila%22&fl=abstract&rows=0&wt=json
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.64.1 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      server: nginx/1.14.1
      date: Tue, 07 Apr 2020 21:31:39 GMT
      content-type: application/json;charset=utf-8
      content-length: '57'
      connection: keep-alive
      last-modified: Tue, 07 Apr 2020 17:37:13 GMT
      etag: '"OTk3ZDgwMDAwMDAwMDAwMFNvbHI="'
    body:
      encoding: ASCII-8BIT
      file: no
      string: ewogICJyZXNwb25zZSI6eyJudW1Gb3VuZCI6Mzc4OCwic3RhcnQiOjAsImRvY3MiOltdCiAgfX0K
  recorded_at: 2020-04-07 21:31:39 GMT
  recorded_with: vcr/0.5.4, webmockr/0.6.2
- request:
    method: get
    uri: http://api.plos.org/search?q=abstract%3A%22drosophila%22&fl=abstract&start=0&rows=5&wt=json
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.64.1 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      server: nginx/1.14.1
      date: Tue, 07 Apr 2020 21:31:39 GMT
      content-type: application/json;charset=utf-8
      content-length: '5432'
      connection: keep-alive
      last-modified: Tue, 07 Apr 2020 17:37:13 GMT
      etag: '"Yjc3ZDgwMDAwMDAwMDAwMFNvbHI="'
    body:
      encoding: ASCII-8BIT
      file: no
      string: ewogICJyZXNwb25zZSI6eyJudW1Gb3VuZCI6Mzc4OCwic3RhcnQiOjAsImRvY3MiOlsKICAgICAgewogICAgICAgICJhYnN0cmFjdCI6WyJCYWNrZ3JvdW5kOiBUaGUgRHJvc29waGlsYSBDIHZpcnVzIChEQ1YpIGlzIGEgY29tbW9uIGFuZCB3ZWxsLXN0dWRpZWQgRHJvc29waGlsYSBwYXRob2dlbi4gQWx0aG91Z2ggbmF0dXJhbCBpbmZlY3Rpb25zIGFyZSBrbm93biBmcm9tIERyb3NvcGhpbGEgbWVsYW5vZ2FzdGVyIGFuZCBELiBzaW11bGFucywgYW5kIGFydGlmaWNpYWwgaW5mZWN0aW9ucyBoYXZlIGJlZW4gcmVwb3J0ZWQgZnJvbSBzZXZlcmFsIERyb3NvcGhpbGEgc3BlY2llcyBhbmQgb3RoZXIgaW5zZWN0cywgaXQgcmVtYWlucyB1bmNsZWFyIHRvIGRhdGUgd2hldGhlciBEQ1YgaW5mZWN0aW9ucyBhbHNvIG9jY3VyIG5hdHVyYWxseSBpbiBvdGhlciBEcm9zb3BoaWxhIHNwZWNpZXMuIE1ldGhvZHMvUHJpbmNpcGFsIEZpbmRpbmdzOiBVc2luZyByZXZlcnNlIHRyYW5zY3JpcHRpb24gUENSLCB3ZSBkZXRlY3RlZCBuYXR1cmFsIGluZmVjdGlvbnMgaW4gc2l4IERyb3NvcGhpbGEgc3BlY2llcywgd2hpY2ggaGF2ZSBub3QgYmVlbiBwcmV2aW91c2x5IGtub3duIGFzIG5hdHVyYWwgaG9zdHMuIEJ5IHN1YnNlcXVlbnQgU2FuZ2VyIHNlcXVlbmNpbmcgd2UgY29tcGFyZWQgRENWIGhhcGxvdHlwZXMgYW1vbmcgZWlnaHQgRHJvc29waGlsYSBob3N0IHNwZWNpZXMuIE91ciBkYXRhIHN1Z2dlc3QgdGhhdCBjcm9zcy1pbmZlY3Rpb25zIG1pZ2h0IGJlIGZyZXF1ZW50IGJvdGggd2l0aGluIGFuZCBhbW9uZyBzcGVjaWVzIHdpdGhpbiB0aGUgbGFib3JhdG9yeSBlbnZpcm9ubWVudC4gTW9yZW92ZXIsIHdlIGZpbmQgdGhhdCBzb21lIGxpbmVzIGV4aGliaXQgbXVsdGlwbGUgaW5mZWN0aW9ucyB3aXRoIGRpc3RpbmN0IERDViBoYXBsb3R5cGVzLiBDb25jbHVzaW9uczogT3VyIHJlc3VsdHMgc3VnZ2VzdCB0aGF0IHRoZSBuYXR1cmFsIGhvc3QgcmFuZ2Ugb2YgRENWIGlzIG11Y2ggYnJvYWRlciB0aGFuIHByZXZpb3VzbHkgYXNzdW1lZCBhbmQgdGhhdCBjcm9zcy1pbmZlY3Rpb25zIG1pZ2h0IGJlIGEgY29tbW9uIHBoZW5vbWVub24gaW4gdGhlIGxhYm9yYXRvcnksIGV2ZW4gYW1vbmcgZGlmZmVyZW50IERyb3NvcGhpbGEgaG9zdHMuICJdfSwKICAgICAgewogICAgICAgICJhYnN0cmFjdCI6WyJCYWNrZ3JvdW5kOiBBbHpoZWltZXIncyBkaXNlYXNlIChBRCkgaXMgb25lIG9mIHRoZSBtb3N0IGNvbW1vbiBuZXVyb2RlZ2VuZXJhdGl2ZSBkaXNvcmRlcnMuIFJlY2VudCBzdHVkaWVzIGhhdmUgc2hvd24gdGhhdCBtaXRvY2hvbmRyaWFsIGR5c2Z1bmN0aW9uIGlzIGEgY2F1c2F0aXZlIGZhY3RvciBvZiBBRC4gRHJwMSAoRHluYW1pbi1yZWxhdGVkIHByb3RlaW4gMSksIGEgcmVndWxhdG9yIG9mIG1pdG9jaG9uZHJpYWwgZmlzc2lvbiwgc2hvd3MgbmV1cm9wcm90ZWN0aXZlIGVmZmVjdHMgb24gUGFya2luc29u4oCZcyBkaXNlYXNlLiBJbiB0aGlzIHN0dWR5LCB3ZSBpbnZlc3RpZ2F0ZSB0aGUgZWZmZWN0IGFuZCBtZWNoYW5pc20gb2YgRHJwMSBvbiBBzrI0MiB0cmFuc2dlbmljIERyb3NvcGhpbGEuIE1ldGhvZHM6IEVsYXYtZ2FsNC9VQVM+Qc6yNDIgdHJhbnNnZW5pYyBEcm9zb3BoaWxhIG1vZGVsIHdhcyBjb25zdHJ1Y3RlZCB1c2luZyBFbGF2LWdhbDQgcHJvbW90ZXIuIFRoZSBlZmZlY3RzIG9mIERycDEgb24gdGhlIGxpZmVzcGFuLCBtb3RvciBhYmlsaXR5IGFuZCBuZXVyb25hbCBkZWdlbmVyYXRpb24gb2YgdGhlIHRyYW5zZ2VuaWMgRHJvc29waGlsYSB3ZXJlIGV4cGxvcmVkIGJ5IG92ZXItZXhwcmVzc2luZyBEcnAxIGluIHRoZSBBzrI0MiB0cmFuc2dlbmljIERyb3NvcGhpbGEuIEFUUCBsZXZlbHMgaW4gdGhlIGJyYWluIHRpc3N1ZXMgb2YgQc6yNDIgdHJhbnNnZW5pYyBEcm9zb3BoaWxhIHdlcmUgZGV0ZWN0ZWQgdXNpbmcgaGlnaCBwZXJmb3JtYW5jZSBsaXF1aWQgY2hyb21hdG9ncmFwaHkgKEhQTEMpLiBSZXN1bHRzOiBFeG9nZW5vdXMgZXhwcmVzc2lvbiBvZiBEcnAxIHByb21vdGVkIGNyYXdsaW5nIGFiaWxpdHksIHJlZHVjZWQgdGhlIGxldmVscyBvZiBBVFAgaW4gRHJvc29waGlsYSBicmFpbiBhbmQgc3VwcHJlc3NlZCB0aGUgbmV1cm9uYWwgZGVnZW5lcmF0aW9uLiBDb25jbHVzaW9uOiBUaGUgcHJvdGVjdGl2ZSBlZmZlY3Qgb2YgRHJwMSBvbiB0aGUgQc6yNDIgdHJhbnNnZW5pYyBEcm9zb3BoaWxhIHdhcyBhY2hpZXZlZCBieSBwcm90ZWN0aW5nIHRoZSBtaXRvY2hvbmRyaWFsIGZ1bmN0aW9uLCBzdWdnZXN0aW5nIHRoYXQgRHJwMSBtYXkgYmUgYSBwb3RlbnRpYWwgdGhlcmFwZXV0aWMgc3RyYXRlZ2llcyBmb3IgQUQuICJdfSwKICAgICAgewogICAgICAgICJhYnN0cmFjdCI6WyJcbkRlc3BpdGUgdGhlIGtub3duIGhlYWx0aCByaXNrcyBvZiB0b2JhY2NvIHNtb2tpbmcsIG1hbnkgcGVvcGxlIGluY2x1ZGluZyBwcmVnbmFudCB3b21lbiBjb250aW51ZSBzbW9raW5nLiBUaGUgZWZmZWN0cyBvZiBkZXZlbG9wbWVudGFsIG5pY290aW5lIGV4cG9zdXJlIGFyZSBrbm93biwgYnV0IHRoZSB1bmRlcmx5aW5nIG1lY2hhbmlzbXMgYXJlIG5vdCB3ZWxsIHVuZGVyc3Rvb2QuIERyb3NvcGhpbGEgbWVsYW5vZ2FzdGVyIGlzIGEgbW9kZWwgb3JnYW5pc20gdGhhdCBjYW4gYmUgdXNlZCBmb3IgdW5jb3ZlcmluZyBnZW5ldGljIGFuZCBtb2xlY3VsYXIgbWVjaGFuaXNtcyBmb3IgZHJ1Z3Mgb2YgYWJ1c2UuIEhlcmUgSSBzaG93IHRoYXQgRHJvc29waGlsYSBjYW4gYmUgYSBtb2RlbCB0byBlbHVjaWRhdGUgdGhlIG1lY2hhbmlzbXMgZm9yIG5pY290aW5l4oCZcyBlZmZlY3RzIG9uIGEgZGV2ZWxvcGluZyBvcmdhbmlzbS4gRHJvc29waGlsYSByZWFyZWQgb24gbmljb3RpbmUgZm9vZCBkaXNwbGF5IGRldmVsb3BtZW50YWwgYW5kIGJlaGF2aW9yYWwgZWZmZWN0cyBzaW1pbGFyIHRvIHRob3NlIGluIG1hbW1hbHMgaW5jbHVkaW5nIGRlY3JlYXNlZCBzdXJ2aXZhbCBhbmQgd2VpZ2h0LCBpbmNyZWFzZWQgZGV2ZWxvcG1lbnRhbCB0aW1lLCBhbmQgZGVjcmVhc2VkIHNlbnNpdGl2aXR5IHRvIGFjdXRlIG5pY290aW5lIGFuZCBldGhhbm9sLiBUaGUgRHJvc29waGlsYSBuaWNvdGluaWMgYWNldHlsY2hvbGluZSByZWNlcHRvciBzdWJ1bml0IGFscGhhIDcgKETOsTcpIG1lZGlhdGVzIHNvbWUgb2YgdGhlc2UgZWZmZWN0cy4gQSBub3ZlbCByb2xlIGZvciBEzrE3IG9uIGV0aGFub2wgc2VkYXRpb24gaW4gRHJvc29waGlsYSBpcyBhbHNvIHNob3duLiBGdXR1cmUgcmVzZWFyY2ggdGFraW5nIGFkdmFudGFnZSBvZiB0aGUgZ2VuZXRpYyBhbmQgbW9sZWN1bGFyIHRvb2xzIGZvciBEcm9zb3BoaWxhIHdpbGwgYWxsb3cgYWRkaXRpb25hbCBkaXNjb3Zlcnkgb2YgdGhlIG1lY2hhbmlzbXMgYmVoaW5kIHRoZSBlZmZlY3RzIG9mIG5pY290aW5lIGR1cmluZyBkZXZlbG9wbWVudC5cbiJdfSwKICAgICAgewogICAgICAgICJhYnN0cmFjdCI6WyJBIERyb3NvcGhpbGEgaGVhZCB3aXRoIGZvdXIgZmx1b3Jlc2NlbnQgdGFnZ2VkIG9sZmFjdG9yeSByZWNlcHRvciBnZW5lcy46IE1vbGVjdWxhciB6aXAgY29kZXMgZm9yIG9kb3IgcmVjZXB0b3IgZ2VuZSBjaG9pY2UgaW4gRHJvc29waGlsYS4gU2Nhbm5pbmcgZWxlY3Ryb24gbWljcm9ncmFwaCBvZiBhIERyb3NvcGhpbGEgaGVhZCBvdmVybGFpZCB3aXRoIGV4cHJlc3Npb24gcGF0dGVybnMgb2YgZm91ciBvZG9yIHJlY2VwdG9yIGdlbmVzIGluIHRoZSBhbnRlbm5hIChibHVlLCB5ZWxsb3csIGFuZCBtYWdlbnRhKSBhbmQgdGhlIG1heGlsbGFyeSBwYWxwIChncmVlbikuIFNlcXVlbmNlcyByZXByZXNlbnQgY2lzIGVsZW1lbnRzIGNvbnNlcnZlZCB1cHN0cmVhbSBvZiBvZG9yIHJlY2VwdG9yIGdlbmVzIGFjcm9zcyAxMiBEcm9zb3BoaWxhIHNwZWNpZXMuICJdfSwKICAgICAgewogICAgICAgICJhYnN0cmFjdCI6WyJcblx0XHRcdFx0UGFyYXNpdG9pZCB3YXNwcyBhcmUgYSBmaWVyY2UgcHJlZGF0b3Igb2YgRHJvc29waGlsYSBsYXJ2YWUuICBGZW1hbGUgTGVwdG9waWxpbmEgYm91bGFyZGkgKExCKSB3YXNwcyB1c2UgYSBzaGFycCBvdmlwb3NpdG9yIHRvIGluamVjdCBlZ2dzIGludG8gdGhlIGJvZGllcyBvZiBEcm9zb3BoaWxhIG1lbGFub2dhc3RlciBsYXJ2YWUuICBUaGUgd2FzcCB0aGVuIGVhdHMgdGhlIERyb3NvcGhpbGEgbGFydmEgYWxpdmUgZnJvbSB0aGUgaW5zaWRlLCBhbmQgYW4gYWR1bHQgd2FzcCBlY2xvc2VzIGZyb20gdGhlIERyb3NvcGhpbGEgcHVwYWwgY2FzZSBpbnN0ZWFkIG9mIGEgZmx5LiAgSG93ZXZlciwgdGhlIERyb3NvcGhpbGEgbGFydmFlIGFyZSBub3QgZGVmZW5zZWxlc3MgYXMgdGhleSBtYXkgcmVzaXN0IHRoZSBhdHRhY2sgb2YgdGhlIHdhc3BzIHRocm91Z2ggc29tYXRvc2Vuc29yeS10cmlnZ2VyZWQgYmVoYXZpb3JhbCByZXNwb25zZXMuICBIZXJlIHdlIGRlc2NyaWJlIHRoZSBmdWxsIHJhbmdlIG9mIGJlaGF2aW9ycyBwZXJmb3JtZWQgYnkgdGhlIGxhcnZhbCBwcmV5IGluIGltbWVkaWF0ZSByZXNwb25zZSB0byBhdHRhY2tzIGJ5IHRoZSB3YXNwcy4gIE91ciByZXN1bHRzIHN1Z2dlc3QgdGhhdCBEcm9zb3BoaWxhIGxhcnZhZSBwcmltYXJpbHkgc2Vuc2UgdGhlIHdhc3BzIHVzaW5nIHRoZWlyIG1lY2hhbm9zZW5zb3J5IHN5c3RlbXMuICBUaGUgcmFuZ2Ugb2YgYmVoYXZpb3JhbCByZXNwb25zZXMgaW5jbHVkZWQgYm90aCDigJxnZW50bGUgdG91Y2jigJ0gbGlrZSByZXNwb25zZXMgYXMgd2VsbCBhcyBub2NpY2VwdGl2ZSByZXNwb25zZXMuICBXZSBmb3VuZCB0aGF0IHRoZSBwcmVjaXNlIGxhcnZhbCByZXNwb25zZSBkZXBlbmRlZCBvbiBib3RoIHRoZSBzb21hdG90b3BpYyBsb2NhdGlvbiBvZiB0aGUgYXR0YWNrLCBhbmQgd2hldGhlciBvciBub3QgdGhlIGxhcnZhbCBjdXRpY2xlIHdhcyBzdWNjZXNzZnVsbHkgcGVuZXRyYXRlZCBkdXJpbmcgdGhlIGNvdXJzZSBvZiB0aGUgYXR0YWNrLiAgSW50ZXJlc3RpbmdseSwgbm9jaWNlcHRpdmUgcmVzcG9uc2VzIGFyZSBtb3JlIGxpa2VseSB0byBiZSB0cmlnZ2VyZWQgYnkgYXR0YWNrcyBpbiB3aGljaCB0aGUgY3V0aWNsZSBoYWQgYmVlbiBzdWNjZXNzZnVsbHkgcGVuZXRyYXRlZCBieSB0aGUgd2FzcC4gIEZpbmFsbHksIHdlIGZvdW5kIHRoYXQgdGhlIGNsYXNzIElWIG5ldXJvbnMsIHdoaWNoIGFyZSBuZWNlc3NhcnkgZm9yIG1lY2hhbmljYWwgbm9jaWNlcHRpb24sIHdlcmUgYWxzbyBuZWNlc3NhcnkgZm9yIGEgbm9jaWNlcHRpdmUgcmVzcG9uc2UgdG8gd2FzcCBhdHRhY2tzLiAgVGh1cywgdGhlIGNsYXNzIElWIG5ldXJvbnMgYWxsb3cgZm9yIGEgbm9jaWNlcHRpdmUgYmVoYXZpb3JhbCByZXNwb25zZSB0byBhIG5hdHVyYWxseSBvY2N1cnJpbmcgcHJlZGF0b3Igb2YgRHJvc29waGlsYS5cblx0XHRcdCJdfV0KICB9fQo=
  recorded_at: 2020-04-07 21:31:39 GMT
  recorded_with: vcr/0.5.4, webmockr/0.6.2
